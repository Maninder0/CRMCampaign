{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maninderpal Singh\\\\OneDrive\\\\Desktop\\\\mini-crm-app\\\\client\\\\src\\\\pages\\\\HomePage.js\";\n// components/HomePage.js\nimport React from 'react';\nimport './HomePage.css'; // Import the CSS file for HomePage styling\nimport { FaUserPlus, FaClipboardList, FaUsers, FaListAlt } from 'react-icons/fa'; // Import icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-page-title\",\n      children: \"Welcome to the Mini- CRM Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"home-page-intro\",\n      children: \"Here's how you can use the application:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"home-page-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FaUserPlus, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Create Customer Button:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), \" To create a new user.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FaClipboardList, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Create Order Button:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), \" Create an order based on a user. Collects total spend, number of visits, and last visited metrics.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Create Audience Button:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), \" To create a campaign based on an audience of customers with the following criteria:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nested-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Customers with total spends > INR 10,000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Customers with total spends > INR 10,000 AND max number of visits are 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Customers not visited in the last 3 months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \"The user should be able to add multiple rules on different available fields and perform AND/OR operations between them. Before saving the audience, they should be able to click a button and check the audience size. Upon saving the audience, step B should happen, and the user should be taken to a screen with a list of past campaigns with the latest campaign on top.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(FaListAlt, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Campaign List Button:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), \" For seeing data of all campaigns created till now with their details.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","FaUserPlus","FaClipboardList","FaUsers","FaListAlt","jsxDEV","_jsxDEV","HomePage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Maninderpal Singh/OneDrive/Desktop/mini-crm-app/client/src/pages/HomePage.js"],"sourcesContent":["// components/HomePage.js\r\nimport React from 'react';\r\nimport './HomePage.css'; // Import the CSS file for HomePage styling\r\nimport { FaUserPlus, FaClipboardList, FaUsers, FaListAlt } from 'react-icons/fa'; // Import icons\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1 className=\"home-page-title\">Welcome to the Mini- CRM Application</h1>\r\n      <p className=\"home-page-intro\">Here's how you can use the application:</p>\r\n      <ul className=\"home-page-list\">\r\n        <li>\r\n          <FaUserPlus className=\"icon\" />\r\n          <div className=\"content\">\r\n            <strong>Create Customer Button:</strong> To create a new user.\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <FaClipboardList className=\"icon\" />\r\n          <div className=\"content\">\r\n            <strong>Create Order Button:</strong> Create an order based on a user. Collects total spend, number of visits, and last visited metrics.\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <FaUsers className=\"icon\" />\r\n          <div className=\"content\">\r\n            <strong>Create Audience Button:</strong> To create a campaign based on an audience of customers with the following criteria:\r\n            <ul className=\"nested-list\">\r\n              <li>Customers with total spends &gt; INR 10,000</li>\r\n              <li>Customers with total spends &gt; INR 10,000 AND max number of visits are 3</li>\r\n              <li>Customers not visited in the last 3 months</li>\r\n            </ul>\r\n            The user should be able to add multiple rules on different available fields and perform AND/OR operations between them. Before saving the audience, they should be able to click a button and check the audience size. Upon saving the audience, step B should happen, and the user should be taken to a screen with a list of past campaigns with the latest campaign on top.\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <FaListAlt className=\"icon\" />\r\n          <div className=\"content\">\r\n            <strong>Campaign List Button:</strong> For seeing data of all campaigns created till now with their details.\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}